<?php

#namespace WilokeTest;


use PHPUnit\Framework\TestCase;
use ReflectionClass;

class CommonController extends TestCase
{
	use HTTP;

	public function setUp()
	{
		parent::setUp(); // TODO: Change the autogenerated stub

		$this->configureAPI();
	}

	/**
	 * @param $object
	 * @param $methodName
	 * @param array $aParams
	 * @return mixed
	 * @throws \ReflectionException
	 */
	public function invokeMethod($object, $methodName, array $aParams = [])
	{
		$reflection = new \ReflectionClass(get_class($object));
		$method = $reflection->getMethod($methodName);
		$method->setAccessible(true);

		return $method->invokeArgs($object, $aParams);
	}

	public function setPrivateProperty($object, $propertyName, $params)
	{
		$reflection = new \ReflectionClass(get_class($object));
		$method = $reflection->getProperty($propertyName);
		$method->setAccessible(true);

		$method->setValue( $object, $params);
	}

	public function getPrivateProperty($object, $propertyName)
	{
		$reflection = new \ReflectionClass(get_class($object));
		$method = $reflection->getProperty($propertyName);
		$method->setAccessible(true);

		return $method->getValue($object);
	}
}
